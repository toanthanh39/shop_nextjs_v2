@import "tailwindcss";
@import "preline/variants.css";
@source "../node_modules/preline/dist/*.js";
@config '../../tailwind.config.ts';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}
}

@layer utilities {
	/* @media screen and (max-width: 1024px) {
		.container {
			padding-left: 16px;
			padding-right: 16px;
		}
	} */
}

@custom-variant dark (&:where(.dark, .dark *));

*,
*:before,
*:after {
	box-sizing: border-box;
}

:root {
	--background: #ffffff;
	--foreground: #171717;
}

@media (prefers-color-scheme: dark) {
	:root {
		--background: #0a0a0a;
		--foreground: #ededed;
	}
}

body {
	/* color: var(--foreground); */
	font-family: Inter, sans-serif;
}
/* //////////////////////////////////////////////// */

input[type="checkbox"] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	width: 20px; /* Kích thước checkbox */
	height: 20px;
	border: 2px solid #ccc; /* Viền mặc định */
	border-radius: 4px; /* Bo góc */
	background-color: #fff; /* Màu nền mặc định */
	cursor: pointer;
	position: relative;
}

input[type="checkbox"]:checked {
	background-color: #d72229; /* Màu nền đỏ khi được chọn */
	border-color: #d72229;
}

/* Tạo dấu tích (checkmark) tùy chỉnh */
input[type="checkbox"]:checked::after {
	content: "\2713"; /* Ký tự dấu tích (✓) */
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	color: white; /* Màu dấu tích */
	font-size: 14px;
	font-weight: bold;
}

option:disabled[value=""] {
	color: #898889;
}

/* /////////////////////////////////////////////// */

.swiper-wrapper {
	flex-wrap: nowrap;
}
.swiper-slide {
	width: fit-content;
}
/* class animation */
.p-c-init {
	-webkit-transform: translateY(60px);
	transform: translateY(60px);
	opacity: 0;
	-webkit-transition:
		opacity 300ms linear,
		transform 300ms linear;
	-webkit-transition:
		opacity 300ms linear,
		-webkit-transform 300ms linear;
	transition:
		opacity 300ms linear,
		-webkit-transform 300ms linear;
	transition:
		opacity 300ms linear,
		transform 300ms linear;
	transition:
		opacity 300ms linear,
		transform 300ms linear,
		-webkit-transform 300ms linear;
}

.p-c-init.active {
	opacity: 1;
	-webkit-transform: translateY(0);
	transform: translateY(0);
}

/* //////////////////////////////////////////////// */

.headerFixed {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: 1000; /* Đảm bảo header nằm trên các thành phần khác */
	background-color: #ffffff; /* Đặt màu nền nếu cần */
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Thêm shadow để phân biệt với nội dung */
}

.ticket {
	position: relative;
	width: fit-content;
	height: fit-content;
	background: linear-gradient(90deg, #d4af37, #f7e1a3, #d4af37);
	display: flex;
	align-items: center;
	justify-content: center;
	font-weight: bold;
	color: #ffffff;
	font-size: 1rem;
}

/* Hiệu ứng răng cưa bên trái và bên phải */
.ticket::before,
.ticket::after {
	content: "";
	position: absolute;
	top: 0;
	bottom: 0;
	width: 10px;
	background: repeating-linear-gradient(
		90deg,
		transparent,
		transparent 5px,
		#d4af37 5px,
		#d4af37 10px
	);
}

.ticket::before {
	left: -10px;
}

.ticket::after {
	right: -10px;
}

/* Đường chấm ở giữa */
.ticket .perforation {
	position: absolute;
	left: 50%;
	top: 0;
	bottom: 0;
	border-left: 2px dashed #a68b2f;
}

/* Hai nửa vòng tròn ở trên và dưới */
.ticket .perforation::before,
.ticket .perforation::after {
	content: "";
	position: absolute;
	left: -10px;
	width: 20px;
	height: 20px;
	background-color: #ffffff;
	border-radius: 50%;
}

.ticket .perforation::before {
	top: -10px;
}

.ticket .perforation::after {
	bottom: -10px;
}

.coupon {
	position: relative;
	width: 400px;
	height: 100px;
	background-color: #f5f5f5;
	border: 1px solid #e0e0e0;
	border-radius: 5px;
	display: flex;
	align-items: center;
	padding: 10px;
	margin: 10px 0;
	font-family: Arial, sans-serif;
}

/* Hiệu ứng răng cưa bên phải */
.coupon::after {
	content: "";
	position: absolute;
	right: -10px;
	top: 0;
	bottom: 0;
	width: 10px;
	background: repeating-linear-gradient(
		90deg,
		transparent,
		transparent 5px,
		#e0e0e0 5px,
		#e0e0e0 10px
	);
}

.qr-code {
	width: 80px;
	height: 80px;
	background-color: #000; /* Placeholder cho QR code */
	margin-right: 10px;
}

.coupon-info {
	flex-grow: 1;
	padding: 5px;
}

.coupon-info .valid {
	color: #28a745;
	font-weight: bold;
	font-size: 0.9rem;
}

.coupon-info .details {
	color: #333;
	font-size: 0.9rem;
}

.days {
	display: flex;
	flex-direction: column;
	align-items: center;
	margin-left: 10px;
}

.days .count {
	color: #dc3545;
	font-weight: bold;
	font-size: 1.2rem;
}

.days .show-btn {
	background-color: #dc3545;
	color: #ffffff;
	padding: 2px 10px;
	border-radius: 5px;
	font-size: 0.8rem;
	cursor: pointer;
}

.days .show-btn:hover {
	background-color: #c82333;
}

.your-custom-bg {
	background-image: url("/assets/images/default.png");
	background-size: 108px 108px; /* Gấp 3 lần kích thước của từng span */
}

.bg-position-0 {
	background-position: 0px 0px;
}

.bg-position-1 {
	background-position: -36px 0px;
}

.bg-position-2 {
	background-position: -72px 0px;
}

.bg-position-3 {
	background-position: 0px -36px;
}

.bg-position-4 {
	background-position: -36px -36px;
}

.bg-position-5 {
	background-position: -72px -36px;
}

.bg-position-6 {
	background-position: 0px -72px;
}

.bg-position-7 {
	background-position: -36px -72px;
}

.bg-position-8 {
	background-position: -72px -72px;
}

.splash-icon span {
	animation: identifier 1s calc(var(--i) * 0.1s) ease-in-out infinite;
}

.text-loading span {
	animation: textLoading 1s calc(var(--i) * 0.1s) ease-in-out infinite;
	transform: translateY(5px);
}

@keyframes identifier {
	0%,
	50%,
	100% {
		transform: scale(1);
	}

	25% {
		transform: scale(0);
	}
}

@keyframes textLoading {
	0% {
		transform: translateY(25px);
	}

	30% {
		transform: translateY(-10px);
	}
	50%,
	100% {
		transform: translateY(0);
	}
}

.fade-enter {
	opacity: 0.01;
	transform: translate(0-10px);
}

.fade-enter-active {
	opacity: 1;
	transform: translate(0, 0);
	transition:
		opacity 300ms ease-in,
		transform 300ms ease-in;
}

.fade-exit {
	opacity: 1;
	transform: translate(0, 0);
}

.fade-exit-active {
	opacity: 0.01;
	transform: translate(0, -10px);
	transition:
		opacity 300ms ease-in,
		transform 300ms ease-in;
}
