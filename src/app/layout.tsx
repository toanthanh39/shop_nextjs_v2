import type { Metadata } from "next";
import { Inter, Noto_Sans, Noto_Serif_Display } from "next/font/google";
import "./globals.css";
import RootProvider from "@/lib/providers/RootProvider";
import DevComponents from "@/features/dev/fixed/DevComponents";
import { generateMetadataSite } from "@/meta";
import { detectLangForServer } from "@/utils/detectServer";
import BaseApi from "@/lib/axios/BaseApi";
import { SystemConst } from "@/common/constants/system";
import { NextIntlClientProvider } from "next-intl";
export async function generateMetadata(): Promise<Metadata> {
	const meta = await generateMetadataSite();
	return meta;
}
const inter = Inter({
	variable: "--font-inter",
	subsets: ["latin"],
});

const notoSans = Noto_Sans({
	variable: "--font-noto-sans",
	subsets: ["latin"],
});

const notoSerifDisplay = Noto_Serif_Display({
	variable: "--font-noto-serif-display",
	subsets: ["latin"],
	weight: ["300", "400", "500", "700"],
});

// export const metadata: Metadata = {
// 	title: "Create Next App",
// 	description: "Generated by create next app",
// };

const getSetingSite = async () => {
	const result = SystemConst.DEFAULT_SYSTEM_SETTING;

	try {
		const lang = await detectLangForServer();
		result.lang = lang;

		return result;
	} catch (error) {
		throw BaseApi.handleError(error);
	}
};

export default async function RootLayout({
	children,
	modal,
}: Readonly<{
	children: React.ReactNode;
	modal: React.ReactNode;
}>) {
	const { lang } = await getSetingSite();
	return (
		<html lang={lang}>
			<meta charSet="utf-8"></meta>
			<body
				className={`${inter.variable} ${notoSans.variable} ${notoSerifDisplay.variable} antialiased  font-inter w-screen overflow-x-hidden dark:bg-black`}>
				<NextIntlClientProvider locale={lang}>
					<RootProvider>
						{children}
						{modal}
					</RootProvider>
				</NextIntlClientProvider>

				<DevComponents />
			</body>
		</html>
	);
}
